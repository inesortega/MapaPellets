map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

upstream shiny_app {
    server pellets-shiny:3838;  # service name on the docker network
}

server {
    # HTTP configuration
    listen 80;
    listen [::]:80;
    server_name pellets.10cal.ovh;

    # HTTP to HTTPS
    if ($scheme != "https") {
        return 301 https://pellets.10cal.ovh$request_uri;
    } 
    
    # HTTPS configuration
    listen [::]:443 ssl; 
    listen 443 ssl; # managed by Certbot
    
    ssl_session_timeout  5m;
    ssl_protocols  TLSv1.2;
    ssl_ciphers  HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers   on;
    
    ssl_certificate /etc/certs/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/certs/privkey.pem; # managed by Certbot
    
    location / {
        proxy_set_header    Host $host;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto $scheme;
        proxy_pass          http://pellets.10cal.ovh:3838;
        proxy_read_timeout  20d;
        proxy_buffering off;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_http_version 1.1;

        proxy_redirect      / $scheme://$host/;
    }
    location ^~ /.well-known/acme-challenge/ {
        root /srv/www/acme;   # matches the host bind we just added
        default_type text/plain;
        try_files $uri =404;
    }
}
